# Generated by Django 5.2.3 on 2025-07-09 16:33

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AIInsight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "insight_type",
                    models.CharField(
                        choices=[
                            ("watering_recommendation", "Watering Recommendation"),
                            ("moisture_trend", "Moisture Trend Analysis"),
                            ("plant_health", "Plant Health Assessment"),
                            ("seasonal_pattern", "Seasonal Pattern"),
                            ("anomaly_detection", "Anomaly Detection"),
                            ("optimization", "Optimization Suggestion"),
                            ("alert", "Alert/Warning"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("recommendation", models.TextField(blank=True)),
                (
                    "confidence_score",
                    models.FloatField(help_text="AI confidence (0-1)"),
                ),
                (
                    "data_analyzed",
                    models.JSONField(
                        default=dict, help_text="Metadata about analyzed data"
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("is_dismissed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PlantProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("vegetable", "Vegetable"),
                            ("fruit", "Fruit"),
                            ("herb", "Herb"),
                            ("flower", "Flower"),
                            ("tree", "Tree"),
                            ("grass", "Grass/Lawn"),
                            ("succulent", "Succulent"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "optimal_moisture_min",
                    models.FloatField(help_text="Minimum optimal moisture %"),
                ),
                (
                    "optimal_moisture_max",
                    models.FloatField(help_text="Maximum optimal moisture %"),
                ),
                (
                    "critical_low_moisture",
                    models.FloatField(help_text="Critical low moisture threshold %"),
                ),
                (
                    "critical_high_moisture",
                    models.FloatField(help_text="Critical high moisture threshold %"),
                ),
                (
                    "watering_frequency_days",
                    models.IntegerField(help_text="Typical watering frequency in days"),
                ),
                (
                    "growth_season_start",
                    models.IntegerField(help_text="Growing season start month (1-12)"),
                ),
                (
                    "growth_season_end",
                    models.IntegerField(help_text="Growing season end month (1-12)"),
                ),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="SoilMoistureReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "moisture_percentage",
                    models.FloatField(help_text="Moisture percentage (0-100)"),
                ),
                ("temperature_celsius", models.FloatField(blank=True, null=True)),
                ("humidity_percentage", models.FloatField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "raw_value",
                    models.IntegerField(
                        blank=True, help_text="Raw sensor reading", null=True
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SoilSensor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("sensor_id", models.CharField(max_length=50, unique=True)),
                (
                    "sensor_type",
                    models.CharField(
                        choices=[
                            ("capacitive", "Capacitive"),
                            ("resistive", "Resistive"),
                            ("tensiometer", "Tensiometer"),
                            ("tdr", "Time Domain Reflectometry"),
                        ],
                        max_length=20,
                    ),
                ),
                ("location", models.CharField(max_length=200)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                (
                    "depth_cm",
                    models.IntegerField(help_text="Sensor depth in centimeters"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enable_ai_insights", models.BooleanField(default=True)),
                (
                    "insight_frequency",
                    models.CharField(
                        choices=[
                            ("realtime", "Real-time"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                        ],
                        default="daily",
                        max_length=20,
                    ),
                ),
                (
                    "notification_types",
                    models.JSONField(
                        default=list,
                        help_text="List of insight types to receive notifications for",
                    ),
                ),
                ("timezone", models.CharField(default="UTC", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="WeatherData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=100)),
                ("latitude", models.DecimalField(decimal_places=8, max_digits=10)),
                ("longitude", models.DecimalField(decimal_places=8, max_digits=11)),
                ("timestamp", models.DateTimeField()),
                ("temperature_celsius", models.FloatField()),
                ("humidity_percentage", models.FloatField()),
                ("precipitation_mm", models.FloatField(default=0)),
                ("wind_speed_kmh", models.FloatField(blank=True, null=True)),
                ("pressure_hpa", models.FloatField(blank=True, null=True)),
                ("uv_index", models.FloatField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SensorPlantAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_date", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "plant_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="predictions.plantprofile",
                    ),
                ),
            ],
        ),
    ]
