# Generated by Django 4.2 on 2025-07-06 06:04

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("fields", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SensorType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("humidity", "Humidity"),
                            ("soil_moisture", "Soil Moisture"),
                            ("temperature", "Temperature"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("unit", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Sensor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="A unique name for the sensor",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="GPS latitude of sensor position",
                        max_digits=10,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="GPS longitude of sensor position",
                        max_digits=10,
                    ),
                ),
                (
                    "depth",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Depth of sensor installation (e.g., in cm or inches)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("installation_date", models.DateTimeField(auto_now_add=True)),
                (
                    "device_id",
                    models.CharField(
                        blank=True,
                        help_text="Unique identifier for the physical sensor device",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("maintenance", "Under Maintenance"),
                            ("faulty", "Faulty"),
                        ],
                        default="active",
                        help_text="Current operational status of the sensor",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes or description about the sensor",
                        null=True,
                    ),
                ),
                (
                    "calibration_slope",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Slope value for sensor calibration (m in y=mx+c)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "calibration_offset",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Offset value for sensor calibration (c in y=mx+c)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "last_calibration",
                    models.DateField(
                        blank=True,
                        help_text="Date of the last sensor calibration",
                        null=True,
                    ),
                ),
                (
                    "reading_frequency",
                    models.IntegerField(
                        blank=True,
                        help_text="Frequency of readings in minutes (e.g., 60 for hourly)",
                        null=True,
                    ),
                ),
                (
                    "battery_level",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Current battery level (%)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "min_threshold",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "max_threshold",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sensors",
                        to="fields.field",
                    ),
                ),
                (
                    "sensor_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sensors.sensortype",
                    ),
                ),
            ],
            options={
                "ordering": ["name", "field"],
                "unique_together": {("field", "latitude", "longitude")},
            },
        ),
    ]
